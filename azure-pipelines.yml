jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:

  - script: |
      curl -L https://n64tools.blob.core.windows.net/binaries/N64-tools/mips64-gcc-toolchain/master/latest/gcc-toolchain-mips64-win64.zip --output gcc-toolchain-mips64-win64.zip
    displayName: 'Get dependencies'
    continueOnError: false

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'gcc-toolchain-mips64-win64.zip' 
      destinationFolder: gcc-toolchain-mips64
      cleanDestinationFolder: false 
    displayName: 'Extract gcc-toolchain-mips64-win64'
    continueOnError: false

    
  - script: |
      set PATH=%PATH%;%BUILD_SOURCESDIRECTORY%\gcc-toolchain-mips64\bin
      make
    displayName: 'Build SDK'
    continueOnError: false

  - bash: |
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/include/
      cp "$BUILD_SOURCESDIRECTORY/include/2.0I"* "$BUILD_ARTIFACTSTAGINGDIRECTORY/include/"

      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/lib/
      cp "$BUILD_SOURCESDIRECTORY/"*.a "$BUILD_ARTIFACTSTAGINGDIRECTORY/lib/"
      cp "$BUILD_SOURCESDIRECTORY/"*.ld "$BUILD_ARTIFACTSTAGINGDIRECTORY/lib/"
    displayName: 'Move Artifacts to Staging Directory'
    continueOnError: false

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'binaries' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional
  
  # Archive Files
  # Archive files using compression formats such as .7z, .rar, .tar.gz, and .zip.
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)' 
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/libultra-win64.zip' 
      #replaceExistingArchive: true

  - task: AzureFileCopy@3
    inputs:
      sourcePath: '$(Build.ArtifactStagingDirectory)\*.zip'
      azureSubscription: 'MsdnAzureServiceRole'
      Destination: 'AzureBlob'
      storage: 'n64tools'
      ContainerName: 'binaries'
      blobPrefix: 'N64-tools/libultra/$(Build.SourceBranchName)/latest/'
      outputStorageUri: 'outputStorageUri'
    displayName: Upload SDK to Blob storage
    #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:

  - bash: |   
      sudo add-apt-repository ppa:jonathonf/gcc -y
      sudo apt-get -qq update

      sudo apt-get install -y build-essential software-properties-common
      sudo apt-get install -y gcc-9 
    displayName: 'Setup Environment'
    continueOnError: false
  
  - bash: |
      curl -L https://n64tools.blob.core.windows.net/binaries/N64-tools/mips64-gcc-toolchain/master/latest/gcc-toolchain-mips64-linux64.tar.gz --output gcc-toolchain-mips64-linux64.tar.gz
      mkdir -p $BUILD_SOURCESDIRECTORY/gcc-toolchain-mips64
      sudo tar -C $BUILD_SOURCESDIRECTORY/gcc-toolchain-mips64 -xhzvf gcc-toolchain-mips64-linux64.tar.gz
    displayName: 'Get gcc-toolchain-mips64'
    continueOnError: false
    

  - bash: |      
      export N64_INST="$BUILD_SOURCESDIRECTORY/gcc-toolchain-mips64"
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$N64_INST/x86_64-pc-linux-gnu/mips64-elf/lib
      sudo ldconfig

      make tools
      make tools-install

      make
      make install
    displayName: 'Build SDK'
    continueOnError: false
  
  - bash: |
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/gcc-toolchain-mips64/
      cp -a $BUILD_SOURCESDIRECTORY/gcc-toolchain-mips64/. $BUILD_ARTIFACTSTAGINGDIRECTORY/gcc-toolchain-mips64/
    displayName: 'Move Artifacts to Staging Directory'
    continueOnError: false

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'binaries-linux' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional
      
  # Archive Files
  # Archive files using compression formats such as .7z, .rar, .tar.gz, and .zip.
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)' 
      includeRootFolder: false
      archiveType: 'tar' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/libultra-linux64.tar.gz' 
      #replaceExistingArchive: true

  - task: AzureCLI@1
    inputs:
      connectedServiceNameARM: 'MsdnAzureServiceRole'
      scriptLocation: 'inlineScript'
      inlineScript: 'az storage blob upload --account-name n64tools -f $(Build.ArtifactStagingDirectory)/libultra-linux64.tar.gz -c binaries -n N64-tools/libdragon/$(Build.SourceBranchName)/latest/libdragon-linux64.tar.gz'
    displayName: Upload linux binary to Blob storage
